name: Check Terraform changes

on:
  workflow_call:
    inputs:
      path:
        description: 'The path to the environment to be validated, e.g. .infra/terraform/service'
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_KEY:
        required: true
      PAT_ATTEST_ADMIN_CI:
        required: true

jobs:
  check-envs:
    name: "Check Terraform env: ${{ inputs.path }}"
    runs-on: "ubuntu-latest"
    steps:
      # Setup
      - uses: actions/checkout@v3
        # Checkout repo before running rtx
        with:
          token: ${{ secrets.PAT_ATTEST_ADMIN_CI }}
      - name: Install Terraform and tflint using rtx
        uses: jdxcode/rtx-action@v1
        with:
          tool_versions: |
            terraform 1.4.5
            tflint 0.30.0
      - name: Install aws-iam-authenticator
        run: |
          curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/aws-iam-authenticator
          chmod +x ./aws-iam-authenticator
          sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
          aws-iam-authenticator version
      - name: Check versions
        run: |
          terraform version
          tflint --version

      # Checks
      - name: Check terraform format for ${{ inputs.path }}
        working-directory: ${{ inputs.path }}
        run: |
          terraform fmt -recursive -diff -write=false -check .
      - name: Debug
        run: |
          rm ${{ inputs.path }}/.terraform.lock.hcl
      - name: Terraform init ${{ inputs.path }}
        working-directory: ${{ inputs.path }}
        run: |
          terraform init -upgrade
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      - name: Lint ${{ inputs.path }}
        working-directory: ${{ inputs.path }}
        run: |
          tflint
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      - name: Check plan for ${{ inputs.path }}
        working-directory: ${{ inputs.path }}
        run: |
          terraform plan -lock=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
